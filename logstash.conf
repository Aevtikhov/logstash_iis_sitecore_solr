input {
  beats {
   port => 5044
  }
}
filter {
 if [logsource] == "sitecore" {
    mutate {
      gsub => [ "message", "[\n]", " " ]
    }
     grok {
       patterns_dir => ["./patterns"]
       match => {
           "message" => [ "%{NUMBER:PID_Process} %{TIME:Time} %{LOGLEVEL:LogLevel} %{DATA:Error.Name} Exception: %{NOTSPACE:Error.Exception} Message: %{DATA:Error.Message} Source: %{GREEDYDATA:Stack.Trace}",
           "%{NUMBER:PID_Process} %{TIME:Time} %{LOGLEVEL:LogLevel} %{DATA:Error.Name} Exception[1]: %{NOTSPACE:Error.Exception} Message[1]: %{DATA:Error.Message} Source[1]: %{GREEDYDATA:Stack.Trace}",
       "%{NUMBER:PID_Process} %{TIME:Time} %{LOGLEVEL:LogLevel} %{GREEDYDATA:Warn.Message}" ]
       }
      # overwrite => [ "message" ]
     }
     mutate {
       convert => { "PID_Process" => "integer" }
       remove_field => ["message"]
     }
     grok {
      match => ["source", "(%{YEAR:year}%{MONTHNUM:month}%{MONTHDAY:day}\.%{NUMBER}\.(log|txt)$)"]
      match => ["source", "(%{YEAR:year}%{MONTHNUM:month}%{MONTHDAY:day}\.(log|txt)$)"]
      add_field => ["timestamp", "%{year}/%{month}/%{day} %{Time}"]
     }
     mutate {
      remove_field => ["year", "month", "day", "hour", "minute", "second"]
     }
     date {
      match => ["timestamp", "yyyy/MM/dd HH:mm:ss"]
      target => "@timestamp"
     }

 }
 else if [logsource] == "iis" {
   grok {
     match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:s-sitename} %{WORD:cs-method} %{URIPATH:cs-uri-stem} %{NOTSPACE:cs-uri-query} %{NUMBER:s-port} %{NOTSPACE:cs-username} %{IPORHOST:c-ip} %{NOTSPACE:cs(User-Agent)} %{NOTSPACE:cs(Cookie)} %{NOTSPACE:cs(Referer)} %{NOTSPACE:cs-host} %{NUMBER:sc-status:int} %{NUMBER:sc-substatus:int} %{NUMBER:sc-win32-status:int} %{NUMBER:sc-bytes:int} %{NUMBER:cs-bytes:int} %{NUMBER:time-taken:int}" ,
     "message", "%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:s-sitename} %{WORD:cs-method} %{URIPATH:cs-uri-stem} %{NOTSPACE:cs-uri-query} %{NUMBER:s-port} %{NOTSPACE:cs-username} %{IPORHOST:c-ip} %{NOTSPACE:cs(User-Agent)} %{NOTSPACE:cs(Referer)} %{NUMBER:response:int} %{NUMBER:sc-substatus:int} %{NUMBER:sc-substatus:int} %{NUMBER:time-taken:int}" ,
     "message", "%{TIMESTAMP_ISO8601:timestamp} %{WORD:cs-method} %{URIPATH:cs-uri-stem} %{NOTSPACE:cs-post-data} %{NUMBER:s-port} %{IPORHOST:c-ip} HTTP/%{NUMBER:c-http-version} %{NOTSPACE:cs(User-Agent)} %{NOTSPACE:cs(Cookie)} %{NOTSPACE:cs(Referer)} %{NOTSPACE:cs-host} %{NUMBER:sc-status:int} %{NUMBER:sc-bytes:int} %{NUMBER:cs-bytes:int} %{NUMBER:time-taken:int}"
     ]
   }
   geoip {
     source => "c-ip"
     target => "geoip"
     add_tag => [ "iis-geoip" ]
   }
   useragent {
     source => "cs(User-Agent)"
   }
 }
 else if [logsource] == "solr" {
   grok {
      match => {
       "message" => ["%{LOGLEVEL:LogLevel} - %{TIMESTAMP_ISO8601:timestamp}.+?;"]
       }
       match => {
       "message" => ["%{JAVASTACKTRACEPART:trace}"]
       }
   }
   date {
    match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
    target => "@timestamp"
   }
 }

 else if [logsource] == "mssql" {
    date {
         match => ["timestamp@", "yyyy-MM-dd HH:mm:ss"]
    }
  }
  else if [service_id] == "mongodb" {
     date {
          match => ["timestamp@", "yyyy-MM-dd HH:mm:ss"]
     }
   }
  else {
   date {
    match => ["timestamp@", "yyyy-MM-dd HH:mm:ss"]
   }
  }
}
output {
  stdout {
    codec => rubydebug
  }
  if [logsource] == "mssql"  {
    elasticsearch {
      hosts => "localhost:9200"
      index => "winlogbeat-%{+YYYY.MM.dd}"
      manage_template => true
    }
  }
  else if [logsource] == "sitecore"  {
    elasticsearch {
      hosts => "localhost:9200"
      index => "sitecore-%{+YYYY.MM.dd}"
      manage_template => true
    }
  }
  else if [logsource] == "solr"{
  elasticsearch {
    hosts => "localhost:9200"
    index => "solr-%{+YYYY.MM.dd}"
    manage_template => true
  }
  }
  else if [service_id] == "mongodb"  {
    elasticsearch {
      hosts => "localhost:9200"
      index => "packetbeat-%{+YYYY.MM.dd}"
      manage_template => true
    }
  }
  else if [logsource] == "iis"  {
    elasticsearch {
      hosts => "localhost:9200"
      index => "iis-%{+YYYY.MM.dd}"
      manage_template => true
    }
  }

  else  {
    elasticsearch {
      hosts => "localhost:9200"
      manage_template => true
    }
  }

}
